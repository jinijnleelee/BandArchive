/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2023-12-31 04:22:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.profile;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class lookProfile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"/>\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/lookProfile.css\">\n");
      out.write("<style>\n");
      out.write("	dl, ol, ul {\n");
      out.write("	    margin-top: 0;\n");
      out.write("	    margin-bottom: 0;\n");
      out.write("	    padding-left: 0;\n");
      out.write("	}\n");
      out.write("	body{\n");
      out.write("		line-height: normal;	\n");
      out.write("	}\n");
      out.write("	button, input, optgroup, select, textarea {\n");
      out.write("	    font-family : revert;\n");
      out.write("	    font-size: revert;\n");
      out.write("	    line-height: inherit;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	a:hover {\n");
      out.write("    	color: revert;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	a{\n");
      out.write("		color: revert;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.modal.show .modal-dialog{\n");
      out.write("		justify-content: center;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.modalBtnForProfile{\n");
      out.write("		width: 150px;\n");
      out.write("	    height: 40px;\n");
      out.write("	    border: 1px solid #999;\n");
      out.write("	    border-radius: 0.5em;\n");
      out.write("	    font-size: 1em;\n");
      out.write("	    box-shadow: 4px 4px 14px rgba(0, 0, 0, 0.15);\n");
      out.write("	    background-color: white;\n");
      out.write("	    cursor: pointer;\n");
      out.write("	    display: flex;\n");
      out.write("	    justify-content: center;\n");
      out.write("	    align-items: center;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<!-- 모달 파트 -->\n");
      out.write("<div class=\"modal\" tabindex=\"-1\" id=\"exampleModal\">\n");
      out.write("  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n");
      out.write("    <div class=\"modal-content\" style=\"width: 450px;\">\n");
      out.write("      <div class=\"modal-header\">\n");
      out.write("        <h5 class=\"modal-title\" id=\"modalMainTitle\"></h5>\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-body\">\n");
      out.write(" 		<div class=\"mainProfile\">\n");
      out.write(" 			<!-- 프로필 이미지  -->\n");
      out.write(" 			<div>\n");
      out.write(" 				<div id=\"imgProfileRoundBox\">\n");
      out.write(" 					<img id=\"imgProfileImage\" class=\"imgProfileImage\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/profileImage/user.png\">\n");
      out.write(" 				</div>\n");
      out.write(" 			</div>\n");
      out.write(" 			<!-- 닉네임과 이메일 -->\n");
      out.write(" 			<div>\n");
      out.write(" 				<div id=\"modalInName\"></div>\n");
      out.write(" 				<div id=\"modalInEmail\"></div>\n");
      out.write(" 			</div>\n");
      out.write(" 		</div>\n");
      out.write(" 		<!-- 프로필 아이콘 -->\n");
      out.write(" 		<div class=\"profileIcons\">\n");
      out.write(" 			<!-- 악기 -->\n");
      out.write(" 			<div class=\"eachIconDiv\">\n");
      out.write(" 				<div>\n");
      out.write(" 					<i class=\"fa-solid fa-guitar\"></i>Instrument\n");
      out.write(" 				</div>\n");
      out.write(" 				<div id=\"modalInInst\">\n");
      out.write("	 				\n");
      out.write(" 				</div>\n");
      out.write(" 			</div>\n");
      out.write(" 			<!-- 장르 -->\n");
      out.write(" 			 <div class=\"eachIconDiv\">\n");
      out.write(" 				<div>\n");
      out.write("					<i class=\"fa-solid fa-music\"></i>Genre\n");
      out.write(" 				</div>\n");
      out.write("	 			<div id=\"modalInGenre\">\n");
      out.write("	 				\n");
      out.write("	 			</div>\n");
      out.write(" 			</div>\n");
      out.write("\n");
      out.write(" 			<!-- 지역 -->\n");
      out.write(" 			 <div class=\"eachIconDiv\">\n");
      out.write(" 				<div>\n");
      out.write(" 					<i class=\"fa-solid fa-house\"></i>Address\n");
      out.write(" 				</div>\n");
      out.write("	 			<div id=\"modalInRegion\">\n");
      out.write("	 				\n");
      out.write("	 			</div>\n");
      out.write(" 			</div>\n");
      out.write(" 			<!-- 성별 -->\n");
      out.write(" 			 <div class=\"eachIconDiv\">\n");
      out.write(" 				<div>\n");
      out.write(" 					<i class=\"fa-solid fa-venus-mars\"></i>Gender\n");
      out.write(" 				</div>\n");
      out.write("	 			<div id=\"modalInExp\">\n");
      out.write("	 				\n");
      out.write("	 			</div>\n");
      out.write(" 			</div> 		\n");
      out.write(" 		</div>\n");
      out.write(" 		<!-- 소개 멘트 -->\n");
      out.write(" 		<div class=\"introMentInput\">\n");
      out.write(" 			<div class=\"mentBox\" id=\"modalInMent\"></div>\n");
      out.write(" 		</div>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-footer\">\n");
      out.write("      	\n");
      out.write("      	<input type=\"hidden\" id=\"hiddenUserNickForModalProfile\" value=\"\">\n");
      out.write("      	<input type=\"hidden\" id=\"hiddenUserName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userNick}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("      	\n");
      out.write("        <button type=\"button\" id=\"testBtn\" class=\"modalBtnForProfile\" >채팅하기</button>\n");
      out.write("		<input type=\"hidden\" id=\"hiddenUserNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("        <button type=\"button\" id=\"bandInviteBtn\" class=\"modalBtnForProfile\">밴드초대하기</button>\n");
      out.write("		<input type=\"hidden\" id=\"hiddenUserNoForModalProfile\" value=\"\">\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("<!--프로필 보기 로딩을 위한 코드 -->\n");
      out.write("<div class=\"wrap-loading display-none\">\n");
      out.write("	<div><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/loadingimg.gif\" /></div>\n");
      out.write("</div>   \n");
      out.write("\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/alarmPage.js\"></script>\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>\n");
      out.write("<script>\n");
      out.write("// 프로필 보기 모달\n");
      out.write("let profileModalOn = $(\".bi-person-circle\");\n");
      out.write("\n");
      out.write("console.log(profileModalOn);\n");
      out.write("\n");
      out.write("for(let eachModal of profileModalOn){\n");
      out.write("  $(eachModal).click((e)=>{\n");
      out.write("    \n");
      out.write("    let userId = $(e.target).prev().val();\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    $.ajax({\n");
      out.write("    	type: 'post',\n");
      out.write("        url: '/fin/inviteCheck',\n");
      out.write("        async: true,\n");
      out.write("        data:{'userNo' : userId},\n");
      out.write("        dataType: 'JSON',\n");
      out.write("        success: function(data){\n");
      out.write("        	\n");
      out.write("        	console.log(data);\n");
      out.write("        	if(data == 0){\n");
      out.write("        		$(\"#bandInviteBtn\").css(\"display\", \"none\");\n");
      out.write("        	}\n");
      out.write("        	if(data == 1){\n");
      out.write("        		$(\"#bandInviteBtn\").css(\"display\", \"flex\");\n");
      out.write("        	}\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("    $.ajax({\n");
      out.write("        type: 'post',\n");
      out.write("        url: '/fin/dbTest',\n");
      out.write("        async: true,\n");
      out.write("        data:{'userNo' : userId},\n");
      out.write("        dataType: 'JSON',\n");
      out.write("        beforeSend:function(){\n");
      out.write("          $('.wrap-loading').removeClass('display-none');\n");
      out.write("          $('.modal-content').css(\"display\", 'none');\n");
      out.write("        },complete:function(){\n");
      out.write("          $('.wrap-loading').addClass('display-none');\n");
      out.write("          $('.modal-content').css(\"display\", 'flex');\n");
      out.write("        },\n");
      out.write("        success: function(data){   \n");
      out.write("			console.log(data);\n");
      out.write("			$(\"#modalInMent\").html(\"\");\n");
      out.write("            $(\"#modalMainTitle\").html(data.userName + \"님의 프로필\");\n");
      out.write("            $(\"#modalInName\").html(data.userName);\n");
      out.write("            $(\"#modalInEmail\").html(data.userEmail);\n");
      out.write("            $(\"#modalInInst\").html(data.inst);\n");
      out.write("            $(\"#modalInGenre\").html(data.genreFavor);\n");
      out.write("            $(\"#modalInRegion\").html(data.region);\n");
      out.write("			if(data.gender == 'M'){\n");
      out.write("				$(\"#modalInExp\").html(\"남자\");\n");
      out.write("			}else{\n");
      out.write("				$(\"#modalInExp\").html(\"여자\");\n");
      out.write("			}\n");
      out.write("            $(\"#modalInMent\").html(data.introMent);\n");
      out.write("\n");
      out.write("			if(data.profileImg != null){\n");
      out.write("				console.log(\"이미지 있다\");\n");
      out.write("				$(\"#imgProfileImage\").attr(\"src\", \"/fin\"+data.profileImg);\n");
      out.write("			}else{\n");
      out.write("				$(\"#imgProfileImage\").attr(\"src\", \"/fin/resources/images/profileImage/user.png\");\n");
      out.write("			}\n");
      out.write("			\n");
      out.write("			$('#hiddenUserNoForModalProfile').val(userId);\n");
      out.write("			$('#hiddenUserNickForModalProfile').val(data.userName);\n");
      out.write("\n");
      out.write("    \n");
      out.write("        },\n");
      out.write("        error: function(err){\n");
      out.write("            console.log(err);\n");
      out.write("        }\n");
      out.write("    })\n");
      out.write("  });\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(\"#testBtn\").click(function(){\n");
      out.write("	let withNo = $('#hiddenUserNoForModalProfile').val();\n");
      out.write("	\n");
      out.write("	chatStart(withNo);\n");
      out.write("});\n");
      out.write("\n");
      out.write("// 프로필에 있는 초대하기 버튼 가져오기\n");
      out.write("let bandInviteBtn = document.getElementById('bandInviteBtn');\n");
      out.write("\n");
      out.write("bandInviteBtn.addEventListener('click',invitate);\n");
      out.write("\n");
      out.write("function invitate(e){\n");
      out.write("    \n");
      out.write("    let toUserNo = e.target.nextElementSibling.value;\n");
      out.write("    console.log(toUserNo);\n");
      out.write("\n");
      out.write("	// 중복 초대장이 있는지 확인해야함\n");
      out.write("	$.ajax({\n");
      out.write("        url:\"dupCheckInvi\",\n");
      out.write("        type:\"GET\",\n");
      out.write("        data:{\"toUserNo\" : toUserNo},\n");
      out.write("        dataType:\"JSON\",\n");
      out.write("        success: function(result){\n");
      out.write("            if(result == 0){ // 중복된 초대장 없을 때, 초대장 보내기\n");
      out.write("				$.ajax({\n");
      out.write("					url:\"sendInvitate\",\n");
      out.write("					type:\"POST\",\n");
      out.write("					data:{\"toUserNo\" : toUserNo},\n");
      out.write("					dataType:\"JSON\",\n");
      out.write("					success: function(result){\n");
      out.write("						Swal.fire({\n");
      out.write("							title: \"BandArchive\",\n");
      out.write("							text: result,\n");
      out.write("							icon: 'success',\n");
      out.write("						}).then(() => {\n");
      out.write("							location.reload();\n");
      out.write("						});\n");
      out.write("					},\n");
      out.write("					error : function(request, status, error){\n");
      out.write("						console.log(\"invitate() AJAX 에러 발생\");\n");
      out.write("						console.log(\"상태코드 : \" + request.status); // 404, 500\n");
      out.write("					}\n");
      out.write("				});\n");
      out.write("			}else{ // 중복된 초대장 있을 때, 알리기\n");
      out.write("				Swal.fire({\n");
      out.write("					title: \"BandArchive\",\n");
      out.write("					text: result,\n");
      out.write("					icon: 'warning',\n");
      out.write("				});\n");
      out.write("			}\n");
      out.write("        },\n");
      out.write("        error : function(request, status, error){\n");
      out.write("            console.log(\"invitate() AJAX 에러 발생\");\n");
      out.write("            console.log(\"상태코드 : \" + request.status); // 404, 500\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("\n");
      out.write("\n");
      out.write("	\n");
      out.write("    \n");
      out.write("    \n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
